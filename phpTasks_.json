{
    "tasks": [
        {
            "authorLogin": "pronskiy",
            "taskId": "0-0",
            "taskName": "Hello World",
            "fileName": "HelloWorld.php",
            "initialCode": "<?php\n",
            "initialOffset": 6,
            "targetCode": "<?php\n\necho 'Hello world!';",
            "hint": ""
        },
        {
            "authorLogin": "pronskiy",
            "taskId": "0-1",
            "taskName": "Print'em all",
            "fileName": "PrintEmAll.php",
            "initialCode": "<?php\n\n$tasks = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n$tasks",
            "initialOffset": 56,
            "targetCode": "<?php\n\n$tasks = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nforeach ($tasks as $task) {\n    echo $task;\n}",
            "hint": ""
        },
        {
            "authorLogin": "bzixilu",
            "taskId": "0-2",
            "taskName": "Print only odd numbers",
            "fileName": "Odd.php",
            "initialCode": "<?php\n\n$tasks = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\nforeach ($tasks as $task) {\n    echo $task . \"\\n\";\n}",
            "initialOffset": 25,
            "targetCode": "<?php\n\n$tasks = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\nforeach ($tasks as $task) {\n    if ($task % 2 == 0) {\n        echo $task . \"\\n\";\n    }\n}",
            "hint": ""
        },
        {
            "authorLogin": "bzixilu",
            "taskId": "0-3",
            "taskName": "Delete unused method",
            "fileName": "DeleteMethod.php",
            "initialCode": "<?php\n\nclass DeleteMethod\n{\n    private function unusedMethod() {\n        \/\/this method is not used any more\n    }\n}",
            "initialOffset": 40,
            "targetCode": "<?php\n\nclass DeleteMethod\n{\n}",
            "hint": ""
        },
        {
            "authorLogin": "pronskiy",
            "taskId": "0-5",
            "taskName": "Immutable DTO",
            "fileName": "ImmutableDTO.php",
            "initialCode": "<?php\n\nclass Order\n{\n    public $id;\n    public $date;\n}",
            "initialOffset": 25,
            "targetCode": "<?php\n\nclass Order\n{\n    \/** @var int *\/\n    private $id;\n\n    \/** @var DateTimeImmutable *\/\n    private $date;\n\n    public function __construct(int $id, DateTimeImmutable $date)\n    {\n        $this->id = $id;\n        $this->date = $date;\n    }\n\n    \/**\n     * @return int\n     *\/\n    public function getId(): int\n    {\n        return $this->id;\n    }\n\n    \/**\n     * @return DateTimeImmutable\n     *\/\n    public function getDate(): DateTimeImmutable\n    {\n        return $this->date;\n    }\n}",
            "hint": ""
        },
        {
            "authorLogin": "pronskiy",
            "taskId": "0-6",
            "taskName": "HTTP Request",
            "fileName": "GetRequest.http",
            "initialCode": "",
            "initialOffset": 0,
            "targetCode": "GET http:\/\/httpbin.org\/uuid\nAccept: application\/json\n\n###",
            "hint": ""
        },
        {
            "authorLogin": "pronskiy",
            "taskId": "0-7",
            "taskName": "String Juggling",
            "fileName": "StringJuggling.php",
            "initialCode": "<?php\n\necho 'There are 5 monkeys in the tree';\n\necho sprintf('        The %2$s contains %1$d monkeys.\n    That\\'s a nice %2$s full of %2$s monkeys.');",
            "initialOffset": 12,
            "targetCode": "<?php\n\n$num = '5';\n$location = 'tree';\necho sprintf(\"There are %s monkeys in the %s\", $num, $location);\n\necho <<<TAG\n        The {$location} contains {$num} monkeys.\n    That's a nice {$location} full of {$num} monkeys.\nTAG;",
            "hint": ""
        }
    ]
}